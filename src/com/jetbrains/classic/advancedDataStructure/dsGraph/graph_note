
classic problems:

key note:
    DFS traversal of graph:
        algo
        1. Start traversing the graph from the given node.
        2. We would take a hash map to store the reference of the copy of all the nodes that have already been visited and cloned.
        The key for the hash map would be the node of the original graph and corresponding value would be the corresponding cloned
        node of the cloned graph. If the node already exists in the visited we return corresponding stored reference of the cloned node.

        3. If we don't find the node in the visited hash map, we create a copy of it and put it in the hash map. Note, how it's
        important to create a copy of the node and add to the hash map before entering recursion.

        4. Now make the recursive call for the neighbors of the node. Pay attention to how many recursion calls we will be making
        for any given node. For a given node the number of recursive calls would be equal to the number of its neighbors. Each recursive
        call made would return the clone of a neighbor.